swagger: "2.0"
info:
  version: "0.0.1"
  title: Sup Seasonal
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /foods:
    x-swagger-router-controller: foods
    get:
      consumes:
        - application/json
      summary: Gets all foods
      description: Returns a list of all foods and their seasonal information.
      operationId: getAllFoods
      responses:
        "200":
          description: Foods response
          schema:
            $ref: "#/definitions/FoodsList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      consumes:
        - application/json
      summary: Adds a food
      description: Adds a new food and its seasonal information to the foods list.
      operationId: addFood
      parameters:
        - name: food
          in: body
          description: The food to add.
          required: true
          schema:
            $ref: "#/definitions/Food"
        - name: token
          in: header
          description: User token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: Added food response
          schema:
            $ref: "#/definitions/Food"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /foods/{food_id}:
    x-swagger-router-controller: foods
    get:
      summary: Gets a single food item
      description: Returns all seasonal information about a given food.
      operationId: getFood
      parameters:
        - name: food_id
          in: path
          description: ID of food to get
          required: true
          type: integer
      responses:
        "200":
          description: Food response
          schema:
            $ref: "#/definitions/Food"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      summary: Update a single food item
      description: Updates the seasonal information about a given food item.
      operationId: updateFood
      parameters:
        - name: food_id
          in: path
          description: ID of food to update
          required: true
          type: integer
        - name: food
          in: body
          required: true
          schema:
            $ref: "#/definitions/Food"
        - name: token
          in: header
          description: User token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: Updated food response
          schema:
            $ref: "#/definitions/Food"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: Removes a food
      description: Removes a food from the foods list.
      operationId: deleteFood
      parameters:
        - name: food_id
          in: path
          description: ID of food to delete
          required: true
          type: integer
        - name: token
          in: header
          description: User token
          required: true
          type: string
          format: string
      responses:
        "204":
          description: Food deleted
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /months/{month}:
    x-swagger-router-controller: months
    get:
      summary: Gets all foods for a given month
      description: Returns a list of all foods and their seasonal information for a specific month.
      operationId: getMonth
      parameters:
        - name: month
          in: path
          description: Month of the year
          required: true
          type: string
      responses:
        "200":
          description: Foods response
          schema:
            $ref: "#/definitions/FoodsList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /months/{month}/recipes:
    x-swagger-router-controller: months
    get:
      summary: Gets recipes using seasonal ingredients for a given month
      description: Returns a list of recipes and their seasonal information for a specific month.
      operationId: getRecipes
      parameters:
        - name: month
          in: path
          description: Month of the year
          required: true
          type: string
      responses:
        "200":
          description: Recipes response
          schema:
            $ref: "#/definitions/RecipeList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /months/{month}/favorites:
    x-swagger-router-controller: favorites
    get:
      summary: Gets favorited recipes by month
      description: Returns a list of all favorited recipes for ingredients from a specific month.
      operationId: getFavoritesByMonth
      parameters:
        - name: month
          in: path
          description: Month of the year
          required: true
          type: string
      responses:
        "200":
          description: Favorites by month response
          schema:
            $ref: "#/definitions/FavoritesByMonthList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: users
    get:
      summary: Gets all users
      description: Returns a list of all users and their information.
      operationId: getAllUsers
      responses:
        "200":
          description: Users response
          schema:
            $ref: "#/definitions/UsersList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      summary: Add a user
      description: Adds a new user to the users list.
      operationId: addUser
      parameters:
        - name: user
          in: body
          description: The user to add.
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Added user response
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{user_id}:
    x-swagger-router-controller: users
    get:
      summary: Gets a user
      description: Returns a single user.
      produces:
       - application/json
      operationId: getUser
      parameters:
        - name: user_id
          in: path
          description: User's ID
          required: true
          type: integer
      responses:
        "200":
          description: User response
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      summary: Update a single user
      description: Updates a user's information.
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          description: User's ID
          required: true
          type: integer
        - name: user
          in: body
          description: The user to update.
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Updated user response
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: Removes a user
      description: Removes a user from the users list.
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: User's ID
          required: true
          type: integer
      responses:
        "204":
          description: User deleted
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /favorites:
    x-swagger-router-controller: favorites
    get:
      summary: Gets all favorited recipes
      description: Returns a list of all of a user's favorited recipes.
      operationId: getFavorites
      parameters:
        - name: token
          in: header
          description: User token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: Favorites response
          schema:
            $ref: "#/definitions/FavoritesList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      consumes:
        - application/json
      summary: Adds a favorite
      description: Adds a favorite and it's info to the list.
      operationId: addFavorite
      parameters:
        - name: favorite
          in: body
          description: The recipe to be added to favorites.
          required: true
          schema:
            $ref: "#/definitions/Favorite"
        - name: token
          in: header
          description: User token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: Added favorite response
          schema:
            $ref: "#/definitions/Favorite"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /favorites/{fave_id}:
    x-swagger-router-controller: favorites
    get:
      summary: Gets favorited recipe
      description: Returns a single recipe saved to a users favorites.
      operationId: getFavorite
      parameters:
        - name: fave_id
          in: path
          description: ID of favorited recipe
          required: true
          type: integer
        - name: token
          in: header
          description: User token
          required: true
          type: string
          format: string
      responses:
        "200":
          description: Favorite recipe by ID response
          schema:
            $ref: "#/definitions/Recipe"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: Removes a favorite
      description: Removes a favorite from the favorites table by ID.
      operationId: deleteFavorite
      parameters:
        - name: fave_id
          in: path
          description: Favorite's ID
          required: true
          type: integer
        - name: token
          in: header
          description: User token
          required: true
          type: string
          format: string
      responses:
        "204":
          description: Favorite deleted
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: login
    post:
      summary: User login
      description: User provides credentials for log in.
      operationId: userLogin
      parameters:
        - name: credentials
          in: body
          description: The users credentials for log in.
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: Authenticated user response
          schema:
            $ref: "#/definitions/Authenticated"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /register:
    x-swagger-router-controller: register
    post:
      summary: Account registration
      description: User provides information to register a new account.
      operationId: userRegistration
      parameters:
        - name: user info
          in: body
          description: The users information to register a new account.
          required: true
          schema:
            $ref: "#/definitions/Registration"
      responses:
        "200":
          description: Account registration response
          schema:
            $ref: "#/definitions/Authenticated"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  FoodsList:
    required:
      - foods
    properties:
      foods:
        type: array
        items:
          $ref: "#/definitions/Food"
  Food:
    required:
      - food_name
    properties:
      food_name:
        type: string
  RecipeList:
    required:
      - recipes
    properties:
      recipes:
        type: array
        items:
          $ref: "#/definitions/Recipe"
  Recipe:
    required:
      - id
      - servings
      - sourceURL
      - title
      - readyInMinutes
      - image
      - imageType
      - extendedIngredients
      - instructions
    properties:
      id:
        type: integer
      servings:
        type: integer
      sourceURL:
        type: string
      title:
        type: string
      readyInMinutes:
          type: integer
      image:
        type: string
      imageType:
        type: string
      extendedIngredients:
        type: object
      instructions:
        type: string
  FavoritesList:
    required:
      - favorites
    properties:
      favorites:
        type: array
        items:
          $ref: "#/definitions/Favorite"
  FavoritesByMonthList:
    required:
      - favorites
    properties:
      favorites:
        type: array
        items:
          $ref: "#/definitions/Favorite"
  Favorite:
    required:
      - user_id
      - recipe_id
      - month
    properties:
      user_id:
        type: integer
      recipe_id:
        type: integer
      month:
        type: string
  UsersList:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/User"
  User:
    required:
      - username
      - email
      - permissions
      - hashed_password
    properties:
      username:
        type: string
      email:
        type: string
      permissions:
        type: string
      hashed_password:
        type: string
  Credentials:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
  Authenticated:
    required:
      - id
      - username
      - email
      - permissions
      - token
    properties:
      id:
        type: integer
      username:
        type: string
      email:
        type: string
      permissions:
        type: string
      token:
        type: string
  Registration:
    required:
      - email
      - password
      - username
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
